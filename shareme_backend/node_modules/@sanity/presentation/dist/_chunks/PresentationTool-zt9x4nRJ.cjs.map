{"version":3,"file":"PresentationTool-zt9x4nRJ.cjs","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helpers.ts","../../../channels/src/controller.ts","../../../visual-editing-helpers/dist/_chunks/urlStringToPath-53ZuVkUF.js","../../../visual-editing-helpers/dist/index.js","../../src/lib/parse.ts","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentListPanel.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationNavigator.tsx","../../src/useLocalState.ts","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/PreviewFrame.tsx","../../src/useDocumentsOnPage.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { ChannelMsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 1000\nexport const HANDSHAKE_INTERVAL = 500\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n  'channel/heartbeat',\n] satisfies ChannelMsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies ChannelMsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport { ChannelMsgType, HandshakeMsgType, InternalMsgType } from './types'\n\nexport const isInternalMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isLegacyHandshakeMessage = ({\n  data = {},\n}: MessageEvent): boolean => {\n  return (\n    // Check data is a record type\n    typeof data === 'object' &&\n    data !== null &&\n    !Array.isArray(data) &&\n    // The \"domain\" key was introduced in commit 4854e7f\n    !('domain' in data) &&\n    // Check the rest of the object shape is present\n    ['id', 'type', 'from', 'to'].every((key) => key in data) &&\n    // Prior to 4854e7f only handshake events were emitted prior to an established connection\n    data.type.startsWith('handshake/')\n  )\n}\n","import { v4 as uuid } from 'uuid'\n\nimport {\n  HANDSHAKE_INTERVAL,\n  HEARTBEAT_INTERVAL,\n  RESPONSE_TIMEOUT,\n} from './constants'\nimport { isHandshakeMessage, isLegacyHandshakeMessage } from './helpers'\nimport type {\n  ChannelMsg,\n  ChannelsController,\n  ChannelsControllerChannel,\n  ChannelsControllerOptions,\n  ChannelStatus,\n  InternalMsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\nexport function createChannelsController<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): ChannelsController {\n  const { destroy, send } = createChannelsControllerInternal(config)\n  const sources = new Set<MessageEventSource>()\n  const sendToSource = new WeakMap<\n    MessageEventSource,\n    ChannelsController['send']\n  >()\n  const destroySource = new Set<ChannelsController['destroy']>()\n\n  const sendToMany = ((id, type, data) => {\n    send(id, type, data)\n    for (const source of sources) {\n      if (\n        source &&\n        'closed' in source &&\n        !source.closed &&\n        sendToSource.has(source)\n      ) {\n        const send = sendToSource.get(source)\n        send!(id, type, data)\n      }\n    }\n  }) satisfies ChannelsController['send']\n\n  const destroyMany = (() => {\n    destroy()\n    for (const destroy of destroySource) {\n      destroy()\n    }\n  }) satisfies ChannelsController['destroy']\n\n  return {\n    destroy: destroyMany,\n    send: sendToMany,\n    addSource(source) {\n      if (sources.has(source)) {\n        return\n      }\n      if (!('closed' in source)) {\n        // eslint-disable-next-line no-console\n        console.warn('Source is unsupported', { source })\n        throw new Error('Source is unsupported')\n      }\n      if (source.closed) {\n        throw new Error('Source is closed')\n      }\n      const { send, destroy } = createChannelsControllerInternal({\n        ...config,\n        target: source,\n        // @TODO temporary workaround for onStatusUpdate and onEvent not differentiating\n        //       iframes from popups\n        connectTo: config.connectTo.map((prevConnectTo) => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { onStatusUpdate, onEvent, ...connectTo } = prevConnectTo\n\n          return {\n            ...connectTo,\n            onEvent: onEvent\n              ? (((type, data) => {\n                  if (\n                    type === 'preview-kit/documents' ||\n                    type === 'overlay/navigate' ||\n                    type === 'loader/documents'\n                  ) {\n                    return\n                  }\n\n                  // @ts-expect-error -- figure out ToArgs complaining\n                  return onEvent(type, data)\n                }) satisfies typeof onEvent)\n              : undefined,\n          }\n        }),\n      })\n      destroySource.add(destroy)\n      sendToSource.set(source, send)\n      sources.add(source)\n    },\n  }\n}\n\nfunction createChannelsControllerInternal<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): Omit<ChannelsController, 'addSource'> {\n  const target = config.target\n\n  const channels: ChannelsControllerChannel<T>[] = config.connectTo.map(\n    (config) => ({\n      buffer: [],\n      config,\n      id: '',\n      handler: handshakeHandler,\n      status: 'connecting',\n      interval: undefined,\n      heartbeat: undefined,\n    }),\n  )\n\n  function startHandshake(channel: ChannelsControllerChannel<T>) {\n    channel.id = uuid()\n    channel.interval = window.setInterval(() => {\n      sendHandshake(channel, 'handshake/syn', { id: channel.id })\n    }, HANDSHAKE_INTERVAL)\n  }\n\n  function stopHandshake(channel: ChannelsControllerChannel<T>) {\n    window.clearInterval(channel.interval)\n  }\n\n  function isValidMessageEvent(\n    e: MessageEvent,\n  ): e is MessageEvent<ProtocolMsg<T>> {\n    const { data, origin } = e\n    return (\n      data.domain === 'sanity/channels' &&\n      data.to == config.id &&\n      channels.map((channel) => channel.config.id).includes(data.from) &&\n      data.type !== 'channel/response' &&\n      origin === config.targetOrigin\n    )\n  }\n\n  function handshakeHandler(e: MessageEvent<ProtocolMsg<T>>) {\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel && data.type === 'handshake/syn-ack') {\n        setChannelStatus(channel, 'connected')\n        sendHandshake(channel, 'handshake/ack', { id: channel.id })\n      }\n    }\n  }\n\n  const messageHandler = (e: MessageEvent<ProtocolMsg<T>>) => {\n    const { data } = e\n    if (\n      !isHandshakeMessage(data.type) &&\n      channels.find((channel) => channel.id === data.connectionId)\n    ) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel) {\n        // eslint-disable-next-line no-warning-comments\n        // @todo Ugly type casting\n        const args = [data.type, data.data] as ToArgs<T>\n        channel.config.onEvent?.(...args)\n        config.onEvent?.(...args)\n        send(channel, 'channel/response', { responseTo: data.id }, false)\n      }\n    }\n  }\n\n  function handleEvents(e: MessageEvent<ProtocolMsg<T>>) {\n    if (isLegacyHandshakeMessage(e)) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Visual editing package mismatch detected! Please ensure you are using the latest version of Sanity Studio and any packages listed here:\\nhttps://github.com/sanity-io/visual-editing',\n      )\n      return\n    }\n\n    if (isValidMessageEvent(e)) {\n      const { data } = e\n      channels.find((channel) => channel.config.id === data.from)?.handler(e)\n    }\n  }\n\n  function flush(channel: ChannelsControllerChannel<T>) {\n    const toFlush = [...channel.buffer]\n    channel.buffer.splice(0, channel.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      send(channel, type, data)\n    })\n  }\n\n  function startHeartbeat(channel: ChannelsControllerChannel<T>) {\n    stopHeartbeat(channel)\n    if (channel.config.heartbeat) {\n      const heartbeatInverval =\n        typeof channel.config.heartbeat === 'number'\n          ? channel.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      channel.heartbeat = window.setInterval(() => {\n        send(channel, 'channel/heartbeat')\n      }, heartbeatInverval)\n    }\n  }\n\n  function stopHeartbeat(channel: ChannelsControllerChannel<T>) {\n    if (channel.heartbeat) {\n      window.clearInterval(channel.heartbeat)\n    }\n  }\n\n  function setChannelStatus(\n    channel: ChannelsControllerChannel<T>,\n    next: ChannelStatus,\n  ) {\n    channel.status = next\n    channel.config.onStatusUpdate?.(next, channel.config.id)\n    config.onStatusUpdate?.(next, channel.config.id)\n    if (next === 'connecting' || next === 'reconnecting') {\n      channel.handler = handshakeHandler\n      stopHeartbeat(channel)\n      startHandshake(channel)\n    } else if (next === 'connected') {\n      channel.handler = messageHandler\n      stopHandshake(channel)\n      startHeartbeat(channel)\n      flush(channel)\n    } else if (next === 'disconnected') {\n      channel.id = null\n      channel.handler = handshakeHandler\n      stopHandshake(channel)\n      stopHeartbeat(channel)\n    }\n  }\n\n  function sendHandshake<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id: uuid(),\n      to: channel.config.id,\n      type,\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: '*' })\n    } catch (e) {\n      throw new Error(`Failed to postMessage '${msg.id}' on '${config.id}'`)\n    }\n  }\n\n  function send<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K | InternalMsgType,\n    data?: Extract<T, { type: K }>['data'],\n    expectResponse = true,\n  ) {\n    const id = uuid()\n\n    // If there is no active channel, push to the buffer\n    if (\n      channel.status === 'connecting' ||\n      channel.status === 'reconnecting' ||\n      channel.status === 'disconnected'\n    ) {\n      channel.buffer.push({ type, data })\n      return\n    }\n\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id,\n      to: channel.config.id,\n      type,\n    }\n\n    if (expectResponse) {\n      const maxWait = setTimeout(() => {\n        // The channel may have changed, so only reject if the IDs match\n        if (msg.connectionId === channel.id) {\n          // Cleanup the transaction listener\n          window.removeEventListener('message', transact, false)\n          // Push the message to the buffer\n          if (type !== 'channel/heartbeat') {\n            channel.buffer.push({ type, data })\n          }\n          // Try to reconnect\n          setChannelStatus(channel, 'reconnecting')\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Received no response to message '${msg.type}' on client '${config.id}' (ID: '${msg.id}').`,\n          )\n        }\n      }, RESPONSE_TIMEOUT)\n\n      const transact = (e: MessageEvent<ChannelMsg>) => {\n        const { data: eventData } = e\n        if (\n          eventData.type === 'channel/response' &&\n          eventData.data?.responseTo &&\n          eventData.data.responseTo === msg.id\n        ) {\n          window.removeEventListener('message', transact, false)\n          clearTimeout(maxWait)\n        }\n      }\n      window.addEventListener('message', transact, false)\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: config.targetOrigin })\n    } catch (e) {\n      throw new Error(\n        `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n      )\n    }\n  }\n\n  function disconnect() {\n    channels.forEach((channel) => {\n      if (['disconnected'].includes(channel.status)) return\n      send(channel, 'channel/disconnect', { id: channel.id }, false)\n      setChannelStatus(channel, 'disconnected')\n    })\n  }\n\n  function destroy() {\n    disconnect()\n    window.removeEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      stopHeartbeat(channel)\n      stopHandshake(channel)\n    })\n  }\n\n  function initialise() {\n    window.addEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      setChannelStatus(channel, 'connecting')\n    })\n  }\n\n  initialise()\n\n  function sendPublic<K extends T['type']>(\n    id: string | string[] | undefined,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    const channelsToSend = id ? (Array.isArray(id) ? [...id] : [id]) : channels\n\n    channelsToSend.forEach((id) => {\n      const channel = channels.find((channel) => channel.config.id === id)\n      if (!channel) throw new Error('Invalid channel ID')\n      send(channel, type, data)\n    })\n  }\n\n  return {\n    destroy,\n    send: sendPublic,\n  }\n}\n","function n(n){return\"object\"==typeof n&&null!==n&&!Array.isArray(n)}function t(n){return null!==n&&Array.isArray(n)}function o(n){let o=\"\";for(const e of n)\"string\"!=typeof e?\"number\"!=typeof e?t(e)?(o&&(o+=\":\"),o+=\"\".concat(e.join(\",\"),\"}\")):e._key&&(o&&(o+=\":\"),o+=\"\".concat(e._key)):(o&&(o+=\":\"),o+=\"\".concat(e)):(o&&(o+=\".\"),o+=e);return o}const e=/^([A-Za-z]+):([0-9]+)$/,r=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,c=/^([A-Za-z]+):([a-z0-9]+)$/;function u(n){const t=[];for(const o of n.split(\".\")){const n=e.exec(o);if(n){t.push(n[1],Number(n[2]));continue}const u=r.exec(o);if(u){t.push(u[1],[Number(u[2]),Number(u[3])]);continue}const s=c.exec(o);s?t.push(s[1],{_key:s[2]}):t.push(o)}return t}export{t as a,n as i,o as p,u};//# sourceMappingURL=urlStringToPath-53ZuVkUF.js.map\n","export{p as pathToUrlString,u as urlStringToPath}from\"./_chunks/urlStringToPath-53ZuVkUF.js\";function t(t,n){return\"\".concat(t,\"-\").concat(\"string\"==typeof n?n:JSON.stringify(n))}const n=\"undefined\"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),r={alt:\"altKey\",ctrl:\"ctrlKey\",mod:n?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function e(t,n){return t.every((t=>r[t]?n[r[t]]:n.key===t.toUpperCase()))}function o(t){return t.key===(n?\"Meta\":\"Ctrl\")}function i(t){return\"Alt\"===t.key}export{t as getQueryCacheKey,i as isAltKey,e as isHotkey,o as isModKey};//# sourceMappingURL=index.js.map\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nimport type { PresentationStateParams } from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(\n  state: PresentationStateParams,\n): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Inline,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, onContinueAnyway, ...restProps } = props\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text=\"Retry\" />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text=\"Continue anyway\"\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport { StateLink, useRouter } from 'sanity/router'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/structure'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { documentId, documentType, parentRefPath, template, ...restProps } =\n    props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{ id: documentId, type: documentType }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find((r) => getPublishedId(r._id) === childId)\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: ref._id,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink,\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onDeskParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n  StructureToolProvider,\n} from 'sanity/structure'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n        // defaultOrdering: [{ field: '_updatedAt', direction: 'desc' }],\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [deskParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement, useMemo } from 'react'\n\nimport { parseId } from '../lib/parse'\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\n\nexport function DocumentListPanel(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n\n  const refsWithParsedIds = useMemo(\n    () =>\n      refs.map(({ _id, _type }) => ({\n        _id: parseId(_id)!,\n        _type,\n      })),\n    [refs],\n  )\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refsWithParsedIds}\n    />\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n  useStructureTool,\n} from 'sanity/structure'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { documentId, documentType, params, onDeskParams, onFocusPath } = props\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  const { setLayoutCollapsed } = useStructureTool()\n  const handleRootCollapse = useCallback(\n    () => setLayoutCollapsed(true),\n    [setLayoutCollapsed],\n  )\n  const handleRootExpand = useCallback(\n    () => setLayoutCollapsed(false),\n    [setLayoutCollapsed],\n  )\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout\n        style={{ height: '100%' }}\n        onExpand={handleRootExpand}\n        onCollapse={handleRootCollapse}\n      >\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { type ReactElement } from 'react'\nimport { type Path } from 'sanity'\nimport { StructureToolProvider } from 'sanity/structure'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { deskParams, documentId, documentType, onDeskParams, onFocusPath } =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n      />\n    </StructureToolProvider>\n  )\n}\n","import { type ReactElement } from 'react'\nimport { type Path } from 'sanity'\n\nimport type { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPanel } from './DocumentListPanel'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPanel\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: any[]) => void>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: any\n  return ((...args: any[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useCallback } from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { PresentationNavigate } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const { children, navigate: _navigate } = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? { preview } : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { memo, useCallback, useMemo } from 'react'\n\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport type { NavigatorOptions } from './types'\nimport { useLocalState } from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const { unstable_navigator } = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{ navigatorEnabled, toggleNavigator }, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, navigate, params } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      navigate,\n      params,\n    }),\n    [deskParams, devMode, name, navigate, params],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { ResetIcon } from '@sanity/icons'\nimport { TextInput, type TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useActiveWorkspace } from 'sanity'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { basePath = '/' } = useActiveWorkspace()?.activeWorkspace || {}\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (\n          !origin &&\n          (absoluteValue.startsWith(`${basePath}/`) ||\n            absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            `URL can't have the same base path as the Studio ${basePath}`,\n          )\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type { ChannelStatus } from '@sanity/channels'\nimport type { ClientPerspective } from '@sanity/client'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  CopyIcon,\n  DatabaseIcon,\n  DesktopIcon,\n  EditIcon,\n  LaunchIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n  ShareIcon,\n} from '@sanity/icons'\nimport { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport {\n  hasSecretSearchParams,\n  setSecretSearchParams,\n  withoutSecretSearchParams,\n} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  ComponentType,\n  createElement,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Hotkeys, useClient, useCurrentUser } from 'sanity'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { API_VERSION, MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<ClientPerspective, string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n  raw: 'Raw',\n}\n\nconst PERSPECTIVE_TONES: Record<ClientPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n  raw: 'default',\n}\n\nconst PERSPECTIVE_ICONS: Record<ClientPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n  raw: DatabaseIcon,\n}\n\ninterface PreviewFrameProps {\n  initialUrl: URL\n  targetOrigin: string\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  openPopup: (url: string) => void\n  overlayEnabled: boolean\n  params: PresentationParams\n  perspective: ClientPerspective\n  setPerspective: Dispatch<SetStateAction<ClientPerspective>>\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  loadersConnection: ChannelStatus\n  overlaysConnection: ChannelStatus\n  previewKitConnection: ChannelStatus\n}\n\nexport const PreviewFrame = forwardRef<HTMLIFrameElement, PreviewFrameProps>(\n  function PreviewFrame(props, ref) {\n    const {\n      initialUrl,\n      targetOrigin,\n      navigatorEnabled,\n      onPathChange,\n      openPopup,\n      overlayEnabled,\n      params,\n      perspective,\n      setPerspective,\n      toggleNavigator,\n      toggleOverlay,\n      loadersConnection,\n      overlaysConnection,\n      previewKitConnection,\n    } = props\n\n    const { devMode } = usePresentationTool()\n\n    const [mode, setMode] = useState<'desktop' | 'mobile'>('desktop')\n    const prefersReducedMotion = usePrefersReducedMotion()\n\n    const setDesktopMode = useCallback(() => setMode('desktop'), [setMode])\n    const setMobileMode = useCallback(() => setMode('mobile'), [setMode])\n    const [loading, setLoading] = useState(true)\n    const [timedOut, setTimedOut] = useState(false)\n    const [refreshing, setRefreshing] = useState(false)\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy =\n      loading || refreshing || overlaysConnection === 'connecting'\n\n    const previewLocationOrigin = useMemo(() => {\n      return targetOrigin === location.origin ? '' : targetOrigin\n    }, [targetOrigin])\n\n    const handleRefresh = useCallback(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      ref.current.src = `${targetOrigin}${params.preview || '/'}`\n\n      setRefreshing(true)\n    }, [params.preview, targetOrigin, ref])\n    const handleRetry = useCallback(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      setRefreshing(true)\n    }, [ref, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n      useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (\n        overlaysConnection === 'connecting' ||\n        overlaysConnection === 'reconnecting'\n      ) {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 1000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [\n      overlaysConnection,\n      loading,\n      refreshing,\n      setShowOverlaysConnectionState,\n    ])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to overlays. Make sure you're calling the 'enableOverlays' function in '@sanity/overlays' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'disconnected') {\n        setSomethingIsWrong(true)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const previewLocationRoute = useMemo(() => {\n      const previewUrl = new URL(params.preview || '/', targetOrigin)\n      const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n      return `${pathname}${search}`\n    }, [params.preview, targetOrigin])\n\n    const onIFrameLoad = useCallback(() => {\n      setLoading(false)\n      setRefreshing(false)\n    }, [])\n\n    return (\n      <MotionConfig\n        transition={prefersReducedMotion ? { duration: 0 } : undefined}\n      >\n        <TooltipDelayGroupProvider delay={1000}>\n          <Card\n            flex=\"none\"\n            padding={2}\n            shadow={1}\n            style={{ position: 'relative' }}\n          >\n            <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n              {toggleNavigator && (\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Toggle navigator</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Toggle navigator\"\n                    fontSize={1}\n                    icon={PanelLeftIcon}\n                    mode=\"bleed\"\n                    onClick={toggleNavigator}\n                    padding={3}\n                    selected={navigatorEnabled}\n                  />\n                </Tooltip>\n              )}\n\n              <Tooltip\n                animate\n                content={\n                  <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                    <Box padding={1}>\n                      <Text size={1}>\n                        {overlayEnabled\n                          ? 'Disable edit overlay'\n                          : 'Enable edit overlay'}\n                      </Text>\n                    </Box>\n                    <Box paddingY={1}>\n                      <Hotkeys\n                        keys={['Alt']}\n                        style={{ marginTop: -4, marginBottom: -4 }}\n                      />\n                    </Box>\n                  </Flex>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={1}\n                placement=\"bottom\"\n                portal\n              >\n                <Card\n                  as=\"label\"\n                  flex=\"none\"\n                  padding={3}\n                  style={{\n                    lineHeight: 0,\n                    borderRadius: 999,\n                    userSelect: 'none',\n                  }}\n                  tone={overlayEnabled ? 'positive' : undefined}\n                >\n                  <Flex align=\"center\" gap={2}>\n                    <div style={{ margin: -2 }}>\n                      <StyledSwitch\n                        checked={overlayEnabled}\n                        onChange={toggleOverlay}\n                        disabled={iframeIsBusy}\n                      />\n                    </div>\n                    <Box>\n                      <Text muted size={1} weight=\"medium\">\n                        Edit\n                      </Text>\n                    </Box>\n                  </Flex>\n                </Card>\n              </Tooltip>\n\n              {devMode && (\n                <Tooltip\n                  animate\n                  content={\n                    <Text size={1}>\n                      {refreshing ? 'Refreshing…' : 'Refresh preview'}\n                    </Text>\n                  }\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Refresh preview\"\n                    fontSize={1}\n                    icon={RefreshIcon}\n                    mode=\"bleed\"\n                    loading={refreshing}\n                    onClick={handleRefresh}\n                    padding={3}\n                  />\n                </Tooltip>\n              )}\n\n              <Box flex={1}>\n                <PreviewLocationInput\n                  onChange={onPathChange}\n                  origin={previewLocationOrigin}\n                  value={previewLocationRoute}\n                />\n              </Box>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ShareIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                    />\n                  }\n                  id=\"location-menu\"\n                  menu={\n                    <Menu>\n                      <ShareUrlMenuItems\n                        initialUrl={initialUrl}\n                        openPopup={openPopup}\n                        previewLocationOrigin={previewLocationOrigin}\n                        previewLocationRoute={previewLocationRoute}\n                      />\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ChevronDownIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                      text={PERSPECTIVE_TITLES[perspective]}\n                      loading={\n                        iframeIsBusy ||\n                        (loadersConnection === 'connecting' &&\n                          previewKitConnection !== 'connected')\n                      }\n                      disabled={loadersConnection !== 'connected'}\n                    />\n                  }\n                  id=\"perspective-menu\"\n                  menu={\n                    <Menu style={{ maxWidth: 240 }}>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() => setPerspective('previewDrafts')}\n                        padding={3}\n                        pressed={perspective === 'previewDrafts'}\n                        tone={PERSPECTIVE_TONES['previewDrafts']}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(\n                                PERSPECTIVE_ICONS['previewDrafts'],\n                              )}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES['previewDrafts']}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with latest draft content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity:\n                                  perspective === 'previewDrafts' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() => setPerspective('published')}\n                        padding={3}\n                        pressed={perspective === 'published'}\n                        tone={PERSPECTIVE_TONES['published']}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(PERSPECTIVE_ICONS['published'])}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES['published']}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with published content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity: perspective === 'published' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Full viewport</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Full viewport\"\n                    fontSize={1}\n                    icon={DesktopIcon}\n                    mode=\"bleed\"\n                    onClick={setDesktopMode}\n                    padding={3}\n                    selected={mode === 'desktop'}\n                  />\n                </Tooltip>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Narrow viewport</Text>}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Narrow viewport\"\n                    fontSize={1}\n                    icon={MobileDeviceIcon}\n                    mode=\"bleed\"\n                    onClick={setMobileMode}\n                    padding={3}\n                    selected={mode === 'mobile'}\n                  />\n                </Tooltip>\n              </Flex>\n            </Flex>\n          </Card>\n\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={mode === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: `0`,\n                      position: `absolute`,\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]:\n                        'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition:\n                        '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[mode] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text=\"Continue anyway\"\n                          style={{ opacity: 0 }}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex\n                          justify=\"center\"\n                          align=\"center\"\n                          direction=\"column\"\n                          gap={4}\n                        >\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut ? (\n                              <>\n                                Unable to connect, check the browser console for\n                                more information.\n                              </>\n                            ) : (\n                              'Connecting…'\n                            )}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text=\"Continue anyway\"\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading || iframeIsBusy) && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: `0`,\n                      position: `absolute`,\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[mode] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        Loading…\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: `0`,\n                      position: `absolute`,\n                      borderTop: '1px solid transparent',\n                      boxShadow: '0 0 0 1px var(--card-border-color)',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message=\"Could not connect to the preview\"\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Overlay connection status\n                                </Label>\n                                <Code size={1}>{overlaysConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Loader connection status\n                                </Label>\n                                <Code size={1}>{loadersConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                ref={ref}\n                style={{\n                  pointerEvents:\n                    iframeIsBusy && !continueAnyway ? 'none' : 'auto',\n                  boxShadow: '0 0 0 1px var(--card-border-color)',\n                  borderTop: '1px solid transparent',\n                }}\n                src={initialUrl.toString()}\n                initial={['background']}\n                variants={iframeVariants}\n                animate={[\n                  (loading || iframeIsBusy) && !continueAnyway\n                    ? 'background'\n                    : 'active',\n                  refreshing ? 'reloading' : 'idle',\n                  mode,\n                  showOverlaysConnectionStatus && !continueAnyway\n                    ? 'timedOut'\n                    : '',\n                ]}\n                onLoad={onIFrameLoad}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  },\n)\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n\nfunction ShareUrlMenuItems(\n  props: Pick<PreviewFrameProps, 'initialUrl' | 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n) {\n  const { initialUrl, openPopup, previewLocationOrigin, previewLocationRoute } =\n    props\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <>\n      <CopyUrlMenuButton\n        initialUrl={initialUrl}\n        previewLocationOrigin={previewLocationOrigin}\n        previewLocationRoute={previewLocationRoute}\n      />\n      <MenuItem\n        icon={LaunchIcon}\n        text=\"Open preview\"\n        as=\"a\"\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        onClick={handleOpenPopup as any}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </>\n  )\n}\n\nfunction CopyUrlMenuButton(\n  props: Pick<PreviewFrameProps, 'initialUrl'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n) {\n  const { initialUrl, previewLocationOrigin, previewLocationRoute } = props\n\n  const { push: pushToast } = useToast()\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [disabled, setDisabled] = useState(false)\n\n  return (\n    <MenuItem\n      disabled={disabled}\n      onClick={() => {\n        if (!navigator?.clipboard) {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Clipboard not supported',\n          })\n          return false\n        }\n        setDisabled(true)\n\n        let id: string | undefined = undefined\n        let url = `${previewLocationOrigin}${previewLocationRoute}`\n        const onFinally = () => {\n          pushToast({\n            id,\n            closable: true,\n            status: 'success',\n            title: 'The URL is copied to the clipboard',\n          })\n          setDisabled(false)\n        }\n        const onError = (error: any) => {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Copy failed',\n            description: error.message || error.toString(),\n          })\n          setDisabled(false)\n        }\n        if (\n          hasSecretSearchParams(initialUrl) &&\n          typeof ClipboardItem !== 'undefined'\n        ) {\n          const type = 'text/plain'\n          const resolvePreviewUrl = async () => {\n            id = pushToast({\n              closable: true,\n              title: 'Copying URL to clipboard…',\n            })\n            const previewUrlSecret = await createPreviewSecret(\n              client,\n              '@sanity/presentation',\n              typeof window === 'undefined' ? '' : location.href,\n              currentUser?.id,\n            )\n\n            const newUrl = setSecretSearchParams(\n              initialUrl,\n              previewUrlSecret.secret,\n              previewLocationRoute,\n            )\n            url = newUrl.toString()\n            return new Blob([url], { type })\n          }\n\n          // Try to save to clipboard then save it in the state if worked\n          const item = new ClipboardItem({\n            [type]: resolvePreviewUrl(),\n          })\n          navigator.clipboard.write([item]).then(onFinally).catch(onError)\n        } else {\n          navigator.clipboard.writeText(url).then(onFinally).catch(onError)\n        }\n      }}\n      text=\"Copy link\"\n      icon={CopyIcon}\n    />\n  )\n}\n","import type { ClientPerspective } from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport { useCallback, useMemo, useState } from 'react'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function useDocumentsOnPage(\n  perspective: ClientPerspective,\n): [\n  DocumentOnPage[],\n  (perspective: ClientPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<Record<string, DocumentOnPage>>({})\n  const [previewDrafts, setPreviewDrafts] = useState<\n    Record<string, DocumentOnPage>\n  >({})\n\n  const setDocumentsOnPage = useCallback(\n    (perspective: ClientPerspective, sourceDocuments: DocumentOnPage[]) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n          if (!warnedAboutCrossDatasetReference) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              'Cross dataset references are not supported yet, ignoring source document',\n              sourceDocument,\n            )\n            warnedAboutCrossDatasetReference = true\n          }\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache =\n        perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((prev) => {\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n        return isEqual(prev, next) ? prev : next\n      })\n    },\n    [],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    return perspective === 'published'\n      ? [...Object.values(published)]\n      : [...Object.values(previewDrafts)]\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { MutableRefObject, useEffect, useMemo, useRef } from 'react'\nimport { RouterContextValue, RouterState, SearchParam } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parseRouterState } from './lib/parse'\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  previewRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  previewRef: MutableRefObject<string | undefined>\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: PresentationNavigate\n  params: PresentationParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const { id, path, type } = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    })\n    return pruned\n  }, [\n    params.inspect,\n    params.path,\n    params.rev,\n    params.since,\n    params.template,\n    params.view,\n    params.pathKey,\n    params.instruction,\n    params.comment,\n  ])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const navigate = useMemo(\n    () =>\n      debounce<PresentationNavigate>(\n        (nextState, nextSearchState = {}, forceReplace) => {\n          // Extract type, id and path as 'routerState'\n          const { _searchParams: routerSearchParams, ...routerState } =\n            routerStateRef.current\n\n          // Convert array of search params to an object\n          const routerSearchState = (routerSearchParams || []).reduce(\n            (acc, [key, value]) => (\n              (acc[key as keyof PresentationSearchParams] = value), acc\n            ),\n            {} as PresentationSearchParams,\n          )\n\n          // Merge routerState and incoming state\n          const state: RouterState = pruneObject({\n            ...routerState,\n            ...nextState,\n          })\n\n          // Merge routerSearchState and incoming searchState\n          const searchState = pruneObject({\n            ...routerSearchState,\n            ...nextSearchState,\n          })\n\n          state._searchParams = Object.entries(searchState).reduce(\n            (acc, [key, value]) => [...acc, [key, value]],\n            [] as SearchParam[],\n          )\n\n          const replace =\n            forceReplace ?? searchState.preview === previewRef.current\n\n          routerNavigate(state, { replace })\n        },\n        50,\n      ),\n    [routerNavigate, previewRef],\n  )\n\n  return {\n    deskParams,\n    navigate,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { startTransition, useEffect, useMemo, useState } from 'react'\nimport {\n  type SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { API_VERSION } from './constants'\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: API_VERSION })\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName)\n  const previewUrlSecret = usePreviewUrlSecret(\n    typeof previewUrl === 'object' || typeof previewUrl === 'function',\n    deps,\n  )\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        } else if (document.referrer) {\n          const referrerUrl = new URL(document.referrer)\n          if (referrerUrl.origin === resolvedUrl.origin) {\n            resultUrl = referrerUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) ||\n          resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object'\n        ? definePreviewUrl<SanityClient>(previewUrl)\n        : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      previewSearchParam,\n      referrer: typeof document === 'undefined' ? null : document.referrer,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n) {\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName],\n  )\n}\n\nfunction usePreviewUrlSecret(\n  enabled: boolean,\n  deps: (string | symbol | undefined)[],\n) {\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() =>\n        setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()),\n      )\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {\n  type ChannelsController,\n  type ChannelStatus,\n  createChannelsController,\n} from '@sanity/channels'\nimport type { ClientPerspective } from '@sanity/client'\nimport { studioPath } from '@sanity/client/csm'\nimport { BoundaryElementProvider, Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  lazy,\n  type ReactElement,\n  startTransition,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique } from 'sanity'\nimport {\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport styled from 'styled-components'\n\nimport {\n  DEFAULT_TOOL_NAME,\n  MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n} from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport { DisplayedDocumentBroadcasterProvider } from './loader/DisplayedDocumentBroadcaster'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { usePresentationNavigator } from './PresentationNavigator'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport type {\n  DeskDocumentPaneParams,\n  LiveQueriesState,\n  LiveQueriesStateValue,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst RevalidateTags = lazy(() => import('./loader/RevalidateTags'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const {\n    previewUrl: _previewUrl,\n    components,\n    unstable_emitExperimentalRevalidateTagsLoaderEvent,\n  } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] = useState<ChannelsController<VisualEditingMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<LiveQueriesState>({})\n\n  const previewRef = useRef<typeof params.preview>()\n\n  const { params, deskParams, navigate } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    previewRef,\n  })\n\n  const [perspective, setPerspective] = useState<ClientPerspective>(() =>\n    params.perspective === 'published' ? params.perspective : 'previewDrafts',\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective)\n\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  // Update the perspective when the param changes\n  useEffect(() => {\n    if (perspective !== params.perspective) {\n      navigate(\n        {},\n        {\n          perspective: perspective === 'published' ? 'published' : undefined,\n        },\n      )\n    }\n  }, [params.perspective, perspective, navigate])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ChannelStatus>('connecting')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ChannelStatus>('connecting')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ChannelStatus>('connecting')\n\n  const [popups] = useState<Set<Window>>(() => new Set())\n  const handleOpenPopup = useCallback(\n    (url: string) => {\n      const source = window.open(url, '_blank')\n      if (source) {\n        popups.add(source)\n      }\n    },\n    [popups],\n  )\n\n  useEffect(() => {\n    if (popups.size && channel) {\n      // loop popups and call channel.addSource\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          channel.addSource(source)\n        }\n      }\n    }\n  }, [channel, popups, popups.size])\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target) return\n\n    const nextChannel = createChannelsController<VisualEditingMsg>({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      target,\n      targetOrigin,\n      connectTo: [\n        {\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setOverlaysConnection,\n          onEvent(type, data) {\n            if (type === 'overlay/focus' && 'id' in data) {\n              navigate({\n                type: data.type,\n                id: data.id,\n                path: data.path,\n              })\n            } else if (type === 'overlay/navigate') {\n              if (previewRef.current !== data.url) {\n                const isInitialNavigation = previewRef.current === undefined\n\n                previewRef.current = data.url\n                if (isInitialNavigation) {\n                  navigate({}, { preview: data.url })\n                } else {\n                  navigate(\n                    { id: undefined, type: undefined },\n                    { preview: data.url },\n                  )\n                }\n              }\n            } else if (type === 'overlay/toggle') {\n              setOverlayEnabled(data.enabled)\n            }\n          },\n        },\n        {\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setLoadersConnection,\n          onEvent(type, data) {\n            if (\n              type === 'loader/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            } else if (\n              type === 'loader/query-listen' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              if (\n                typeof data.heartbeat === 'number' &&\n                data.heartbeat! < MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL\n              ) {\n                throw new Error(\n                  `Loader query listen heartbeat interval must be at least ${MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL}ms`,\n                )\n              }\n              setLiveQueries((prev) => ({\n                ...prev,\n                [getQueryCacheKey(data.query, data.params)]: {\n                  perspective: data.perspective,\n                  query: data.query,\n                  params: data.params,\n                  receivedAt: Date.now(),\n                  heartbeat: data.heartbeat ?? false,\n                } satisfies LiveQueriesStateValue,\n              }))\n            }\n          },\n        },\n        {\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setPreviewKitConnection,\n          onEvent(type, data) {\n            if (\n              type === 'preview-kit/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            }\n          },\n        },\n      ],\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.destroy()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, navigate, targetOrigin])\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        startTransition(() =>\n          setLiveQueries((liveQueries) => {\n            if (Object.keys(liveQueries).length < 1) {\n              return liveQueries\n            }\n\n            const now = Date.now()\n            const hasAnyExpired = Object.values(liveQueries).some(\n              (liveQuery) =>\n                liveQuery.heartbeat !== false &&\n                now > liveQuery.receivedAt + liveQuery.heartbeat,\n            )\n            if (!hasAnyExpired) {\n              return liveQueries\n            }\n            const next = {} as LiveQueriesState\n            for (const [key, value] of Object.entries(liveQueries)) {\n              if (\n                value.heartbeat !== false &&\n                now > value.receivedAt + value.heartbeat\n              ) {\n                continue\n              }\n              next[key] = value\n            }\n            return next\n          }),\n        ),\n      MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n    )\n    return () => clearInterval(interval)\n  }, [])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({ path: studioPath.toString(nextPath) }, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        navigate({ id: undefined, path: undefined }, { preview })\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      navigate({}, deskParams)\n    },\n    [navigate],\n  )\n\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('overlays', 'presentation/focus', {\n        id: params.id,\n        path: params.path,\n      })\n    } else {\n      channel?.send('overlays', 'presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      previewRef.current &&\n      params.preview &&\n      previewRef.current !== params.preview\n    ) {\n      previewRef.current = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        channel?.send('overlays', 'presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [channel, overlaysConnection, targetOrigin, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('overlays', 'presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(\n    null,\n  )\n\n  const [{ navigatorEnabled, toggleNavigator }, PresentationNavigator] =\n    usePresentationNavigator({ unstable_navigator })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, { rev: undefined })\n    }\n    idRef.current = params.id\n  })\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        navigate={navigate}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                <PresentationNavigator />\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex\n                    direction=\"column\"\n                    flex={1}\n                    height=\"fill\"\n                    ref={setBoundaryElement}\n                  >\n                    <BoundaryElementProvider element={boundaryElement}>\n                      <PreviewFrame\n                        initialUrl={initialPreviewUrl}\n                        navigatorEnabled={navigatorEnabled}\n                        onPathChange={handlePreviewPath}\n                        openPopup={handleOpenPopup}\n                        overlayEnabled={overlayEnabled}\n                        params={params}\n                        perspective={perspective}\n                        ref={iframeRef}\n                        setPerspective={setPerspective}\n                        targetOrigin={targetOrigin}\n                        toggleNavigator={toggleNavigator}\n                        toggleOverlay={toggleOverlay}\n                        loadersConnection={loadersConnection}\n                        overlaysConnection={overlaysConnection}\n                        previewKitConnection={previewKitConnection}\n                      />\n                    </BoundaryElementProvider>\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <DisplayedDocumentBroadcasterProvider\n                    documentId={params.id}\n                    setDisplayedDocument={setDisplayedDocument}\n                  >\n                    <ContentEditor\n                      refs={documentsOnPage}\n                      deskParams={deskParams}\n                      documentId={params.id}\n                      documentType={params.type}\n                      onDeskParams={handleDeskParams}\n                      onFocusPath={handleFocusPath}\n                      previewUrl={params.preview}\n                    />\n                  </DisplayedDocumentBroadcasterProvider>\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <Suspense>\n          <LoaderQueries\n            channel={channel}\n            liveQueries={liveQueries}\n            perspective={perspective}\n            liveDocument={displayedDocument}\n            documentsOnPage={documentsOnPage}\n          />\n        </Suspense>\n      )}\n      {unstable_emitExperimentalRevalidateTagsLoaderEvent && channel && (\n        <Suspense>\n          <RevalidateTags channel={channel} />\n        </Suspense>\n      )}\n    </>\n  )\n}\n"],"names":["jsxRuntime","require","csm","ui","react","sanity","router","styled","index","structure","DisplayedDocumentBroadcaster","icons","createSecret","withoutSecretSearchParams","framerMotion","isEqual","definePreviewUrl","suspendReact","_interopDefaultCompat","e","default","styled__default","isEqual__default","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","HANDSHAKE_INTERVAL","HANDSHAKE_MSG_TYPES","isHandshakeMessage","type","some","t","isLegacyHandshakeMessage","data","Array","isArray","every","key","startsWith","createChannelsControllerInternal","config","target","channels","connectTo","map","buffer","id","handler","handshakeHandler","status","interval","heartbeat","stopHandshake","channel","window","clearInterval","find","from","setChannelStatus","sendHandshake","messageHandler","_a","_b","_c","connectionId","args","onEvent","call","send","responseTo","handleEvents","console","error","origin","domain","to","includes","targetOrigin","isValidMessageEvent","stopHeartbeat","next","onStatusUpdate","uuid","setInterval","startHandshake","heartbeatInverval","startHeartbeat","toFlush","splice","length","forEach","flush","msg","postMessage","concat","expectResponse","maxWait","setTimeout","removeEventListener","transact","warn","eventData","clearTimeout","addEventListener","destroy","r","c","alt","ctrl","mod","test","navigator","platform","shift","parseId","rawId","segments","decodeURIComponent","split","join","parsePath","rawPath","studioPath","n","o","exec","Number","u","s","_key","urlStringToPath","ErrorCard","props","children","message","onRetry","onContinueAnyway","restProps","retryButton","jsx","Button","fontSize","mode","onClick","text","continueAnywayButton","tone","Card","height","Flex","align","justify","Container","padding","sizing","width","jsxs","Stack","space","Text","size","weight","muted","Inline","Box","usePresentationTool","presentation","useContext","PresentationContext","resolveQueryStringFromParams","nextParams","allowed","params","parts","Object","entries","value","encodeQueryString","filter","reduce","obj","BackLink","forwardRef","ref","deskParams","StateLink","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onDeskParams","previewUrl","refs","routerState","resolvePathFromState","useRouter","routerSearchParams","useUnique","fromEntries","createPathWithParams","useCallback","path","qs","context","useMemo","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","getPublishedId","_id","_type","ParameterizedLink","Fragment","closeCurrentAndAfter","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","PaneRouterContext","Provider","RootLayout","PaneLayout","__template","Root","WrappedCode","Code","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","useState","handleRetry","useEffect","flex","overflow","radius","Label","ErrorBoundary","onCatch","StructureToolProvider","direction","DeskDocumentListPane","itemId","paneKey","DocumentListPanel","refsWithParsedIds","DocumentPane","onFocusPath","paneDocumentNode","setLayoutCollapsed","useStructureTool","handleRootCollapse","handleRootExpand","style","onExpand","onCollapse","DeskDocumentPane","DocumentPanel","ContentEditor","PanelsContext","createContext","displayName","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","useLayoutEffect","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","useRef","current","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timeout","timer","apply","itemKey","getStoredItem","JSON","parse","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","set","widths","setItem","stringify","setStoredItem","get","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","b","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","Map","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","has","delete","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","widthsChanged","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","disconnect","PresentationNavigateProvider","navigate","_navigate","document","PresentationNavigateContext","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","defaultValue","setValue","useLocalState","navigatorEnabled","toggleNavigator","enabled","Component","Navigator","memo","NavigatorComponent","navigatorDisabled","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","name","IFrame","motion","iframe","PreviewLocationInput","basePath","activeWorkspace","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","nextValue","handleBlur","resetButton","icon","ResetIcon","TextInput","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","MotionFlex","StyledSwitch","Switch","PERSPECTIVE_TITLES","previewDrafts","published","raw","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","DatabaseIcon","PreviewFrame","initialUrl","onPathChange","openPopup","overlayEnabled","perspective","setPerspective","toggleOverlay","loadersConnection","overlaysConnection","previewKitConnection","setMode","prefersReducedMotion","usePrefersReducedMotion","setDesktopMode","setMobileMode","loading","setLoading","timedOut","setTimedOut","refreshing","setRefreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","previewLocationOrigin","location","handleRefresh","src","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","M","previewLocationRoute","URL","pathname","search","onIFrameLoad","MotionConfig","transition","duration","TooltipDelayGroupProvider","delay","shadow","position","gap","minHeight","Tooltip","animate","content","fallbackPlacements","placement","portal","PanelLeftIcon","selected","whiteSpace","paddingY","Hotkeys","keys","marginTop","marginBottom","as","lineHeight","borderRadius","userSelect","margin","checked","RefreshIcon","MenuButton","button","iconRight","ShareIcon","menu","Menu","ShareUrlMenuItems","popover","constrainSize","ChevronDownIcon","MenuItem","pressed","createElement","opacity","CheckmarkIcon","DesktopIcon","MobileDeviceIcon","cursor","AnimatePresence","initial","exit","variants","errorVariants","background","inset","borderTop","boxShadow","spinnerVariants","sizes","Spinner","backdropFilter","WebkitBackdropFilter","WebkitTransition","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","handleOpenPopup","href","CopyUrlMenuButton","LaunchIcon","rel","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","setDisabled","clipboard","closable","url","onFinally","onError","description","hasSecretSearchParams","ClipboardItem","item","async","previewUrlSecret","createPreviewSecret","newUrl","setSecretSearchParams","secret","Blob","resolvePreviewUrl","write","then","catch","writeText","CopyIcon","warnedAboutCrossDatasetReference","pruneObject","useParams","initialPreviewUrl","routerNavigate","previewRef","rev","since","view","pathKey","instruction","comment","routerStateRef","nextState","nextSearchState","forceReplace","routerSearchState","searchState","replace","usePreviewUrl","toolName","previewSearchParam","workspace","useActiveWorkspace","workspaceName","deps","resolveUUID","useSuspendCacheKeys","secretLastExpiredAt","setSecretLastExpiredAt","suspend","startTransition","expiresAt","getTime","Date","now","usePreviewUrlSecret","resolvedUrl","resultUrl","restoredUrl","referrer","referrerUrl","studioBasePath","Symbol","LoaderQueries","lazy","Promise","resolve","RevalidateTags","exports","_previewUrl","components","unstable_emitExperimentalRevalidateTagsLoaderEvent","tool","DEFAULT_TOOL_NAME","option","hostname","iframeRef","setChannel","liveQueries","setLiveQueries","documentsOnPage","setDocumentsOnPage","setPublished","setPreviewDrafts","sourceDocuments","documents","sourceDocument","_projectId","useDocumentsOnPage","setOverlayEnabled","projectId","useProjectId","dataset","useDataset","setOverlaysConnection","setLoadersConnection","setPreviewKitConnection","popups","Set","source","open","add","closed","addSource","contentWindow","nextChannel","sources","sendToSource","WeakMap","destroySource","prevConnectTo","createChannelsController","isInitialNavigation","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","query","receivedAt","liveQuery","handleFocusPath","nextPath","handlePreviewPath","handleDeskParams","displayedDocument","setDisplayedDocument","handleKeyUp","isAltKey","handleKeydown","toUpperCase","boundaryElement","setBoundaryElement","PresentationNavigator","idRef","BoundaryElementProvider","DisplayedDocumentBroadcasterProvider","D","Suspense","liveDocument"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}