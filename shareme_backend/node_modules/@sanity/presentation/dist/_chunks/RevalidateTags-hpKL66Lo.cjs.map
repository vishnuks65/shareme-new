{"version":3,"file":"RevalidateTags-hpKL66Lo.cjs","sources":["../../src/loader/RevalidateTags.tsx"],"sourcesContent":["import type { ChannelsController } from '@sanity/channels'\nimport type {\n  LoaderPayloads,\n  VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport { useEffect, useMemo } from 'react'\nimport { getPublishedId, useClient } from 'sanity'\n\nexport interface RevalidateTagsProps {\n  channel: ChannelsController<VisualEditingMsg> | undefined\n}\n\nexport default function RevalidateTags(props: RevalidateTagsProps): null {\n  const { channel } = props\n  const client = useClient({ apiVersion: '2023-10-16' })\n  const clientConfig = useMemo(() => client.config(), [client])\n\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    if (channel) {\n      const { projectId, dataset } = clientConfig\n\n      const subscription = client\n        .listen(\n          '*[!(_type in path(\"system.**\"))]',\n          {},\n          {\n            events: ['mutation'],\n            includePreviousRevision: false,\n            includeResult: true,\n            visibility: 'query',\n            tag: 'presentation-loader',\n          },\n        )\n        .subscribe((update) => {\n          if (update.type !== 'mutation' || update.transition === 'disappear') {\n            return\n          }\n          const type = update.result?._type\n          if (!type) {\n            // eslint-disable-next-line no-console\n            console.warn('Type is missing, skipping revalidation', update)\n            return\n          }\n          const slug: string | undefined = update.result?.slug?.current\n            ? `${type}:${update.result.slug.current}`\n            : undefined\n          const tags = [getPublishedId(update.documentId), type, slug!].filter(\n            Boolean,\n          ) as [string, string, string]\n          channel.send('loaders', 'loader/revalidate-tags', {\n            projectId: projectId!,\n            dataset: dataset!,\n            tags,\n          } satisfies LoaderPayloads['revalidate-tags'])\n        })\n      return () => subscription.unsubscribe()\n    }\n  }, [channel, client, clientConfig])\n\n  return null\n}\n"],"names":["exports","default","props","channel","client","useClient","apiVersion","clientConfig","useMemo","config","useEffect","projectId","dataset","subscription","listen","events","includePreviousRevision","includeResult","visibility","tag","subscribe","update","_a","_b","_c","type","transition","result","_type","console","warn","slug","current","concat","tags","getPublishedId","documentId","filter","Boolean","send","unsubscribe"],"mappings":"wDA6DAA,QAAAC,QAjDA,SAAuCC,GAC/B,MAAAC,QAAEA,GAAYD,EACdE,EAASC,EAAAA,UAAU,CAAEC,WAAY,eACjCC,EAAeC,EAAAA,SAAQ,IAAMJ,EAAOK,UAAU,CAACL,IA6C9C,OA1CPM,EAAAA,WAAU,KACR,GAAIP,EAAS,CACL,MAAAQ,UAAEA,EAAWC,QAAAA,GAAYL,EAEzBM,EAAeT,EAClBU,OACC,mCACA,CAAC,EACD,CACEC,OAAQ,CAAC,YACTC,yBAAyB,EACzBC,eAAe,EACfC,WAAY,QACZC,IAAK,wBAGRC,WAAWC,IAlCpB,IAAAC,EAAAC,EAAAC,EAmCU,GAAoB,aAAhBH,EAAOI,MAA6C,cAAtBJ,EAAOK,WACvC,OAEI,MAAAD,EAAO,OAAAH,EAAOD,EAAAM,aAAQ,EAAAL,EAAAM,MAC5B,IAAKH,EAGH,YADQI,QAAAC,KAAK,yCAA0CT,GAGzD,MAAMU,GAA2B,OAAAP,EAAA,OAAAD,EAAAF,EAAOM,aAAP,EAAAJ,EAAeQ,WAAf,EAAAP,EAAqBQ,SAClD,GAAGC,OAAIR,EAAA,KAAIQ,OAAOZ,EAAAM,OAAOI,KAAKC,cAC9B,EACEE,EAAO,CAACC,EAAAA,eAAed,EAAOe,YAAaX,EAAMM,GAAOM,OAC5DC,SAEMnC,EAAAoC,KAAK,UAAW,yBAA0B,CAChD5B,YACAC,UACAsB,QAC2C,IAE1C,MAAA,IAAMrB,EAAa2B,aAC5B,IACC,CAACrC,EAASC,EAAQG,IAEd,IACT"}