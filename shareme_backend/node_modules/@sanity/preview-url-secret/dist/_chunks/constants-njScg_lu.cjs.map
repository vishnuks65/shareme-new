{"version":3,"file":"constants-njScg_lu.cjs","sources":["../../src/constants.ts"],"sourcesContent":["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n} from './types'\n\n/** @internal */\nexport const schemaType =\n  'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix =\n  'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const apiVersion = '2023-11-09'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n  _id,\n  _updatedAt,\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n"],"names":["schemaType","isDev","process","env","NODE_ENV","SECRET_TTL","fetchSecretQuery","concat","deleteExpiredSecretsQuery","exports","S","a","b","c","d","f","i","s","t","u"],"mappings":"aAMO,MAAMA,EACX,0BAgBWC,EAAiC,gBAAzBC,QAAQC,IAAIC,SAMpBC,EAAa,KAGbC,EACA,eAAeC,OAAUP,EAAA,uEAAsEO,OAAUF,EAAA,4DAQzGG,EACA,eAAeD,OAAUP,EAAA,mDAAkDO,OAAUF,EAAA,KAM/EI,QAAAC,EAAAL,EAAAI,QAAAE,EAlCO,aAkCPF,QAAAG,EA5B0B,0BA4B1BH,QAAAI,EAAAb,EAAAS,QAAAK,EAAAN,EAAAC,QAAAM,EAAAT,EAAAG,QAAAO,EAAAf,EAAAQ,QAAAQ,EArCjB,4BAqCiBR,QAAAS,EAAA,4BAAAT,QAAAU,EA/BwB"}