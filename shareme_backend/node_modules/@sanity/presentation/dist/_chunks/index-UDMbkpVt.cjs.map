{"version":3,"file":"index-UDMbkpVt.cjs","sources":["../../src/constants.ts","../../src/PresentationContext.ts","../../src/useDocumentLocations.ts","../../src/document/LocationsBanner.tsx","../../src/document/PresentationDocumentContext.ts","../../src/document/PresentationDocumentHeader.tsx","../../src/document/PresentationDocumentProvider.tsx","../../src/fieldActions/openInStructure.ts","../../src/getIntentState.ts","../../src/router.ts","../../src/plugin.tsx","../../src/PresentationNavigateContext.ts","../../src/PresentationParamsContext.ts","../../src/usePresentationParams.ts","../../src/usePresentationNavigate.ts"],"sourcesContent":["import { ComposeIcon } from '@sanity/icons'\n\nexport const DEFAULT_TOOL_ICON = ComposeIcon\nexport const DEFAULT_TOOL_NAME = 'presentation'\nexport const DEFAULT_TOOL_TITLE = 'Presentation'\n\nexport const EDIT_INTENT_MODE = 'presentation'\n\n// How long we wait until an iframe is loaded until we consider it to be slow and possibly failed\nexport const MAX_TIME_TO_OVERLAYS_CONNECTION = 3000 // ms\n\n// The API version to use when using `@sanity/client`\nexport const API_VERSION = '2023-10-16'\n\n// Heartbeats shouldn't fire on intervals that are so short it causes performance issues\nexport const MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL = 1000 // ms\n\n// Batch size for fetching documents building up the cache\nexport const LIVE_QUERY_CACHE_BATCH_SIZE = 100\n\n// Total cache size for documents that are live queried\nexport const LIVE_QUERY_CACHE_SIZE = 2048\n","import { createContext } from 'react'\n\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n} from './types'\n\nexport interface PresentationContextValue {\n  deskParams: DeskDocumentPaneParams\n  devMode: boolean\n  name: string\n  navigate: PresentationNavigate\n  params: PresentationParams\n}\n\nexport const PresentationContext =\n  createContext<PresentationContextValue | null>(null)\n","import { useEffect, useState } from 'react'\nimport { isObservable, of } from 'rxjs'\nimport { useDocumentStore } from 'sanity'\n\nimport { DocumentLocationResolver, DocumentLocationsState } from './types'\n\nconst INITIAL_STATE: DocumentLocationsState = { locations: [] }\n\nexport function useDocumentLocations(props: {\n  id: string\n  locate?: DocumentLocationResolver\n  type: string\n}): DocumentLocationsState {\n  const { id, locate, type } = props\n  const documentStore = useDocumentStore()\n  const [state, setLocations] = useState<DocumentLocationsState>(INITIAL_STATE)\n\n  useEffect(() => {\n    if (!locate) return undefined\n\n    const params = { id, type }\n    const context = { documentStore }\n\n    const result = locate(params, context)\n    const locations$ = isObservable(result) ? result : of(result)\n\n    const sub = locations$.subscribe((d) => setLocations(d || INITIAL_STATE))\n\n    return () => sub.unsubscribe()\n  }, [documentStore, id, locate, type])\n\n  return state\n}\n","import {\n  ChevronRightIcon,\n  DesktopIcon,\n  ErrorOutlineIcon,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport { Box, Card, Flex, Stack, Text } from '@sanity/ui'\nimport {\n  ComponentType,\n  createElement,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react'\nimport { ObjectSchemaType } from 'sanity'\nimport { useIntentLink } from 'sanity/router'\n\nimport { DEFAULT_TOOL_NAME, DEFAULT_TOOL_TITLE } from '../constants'\nimport { PresentationContext } from '../PresentationContext'\nimport { DocumentLocation, PresentationPluginOptions } from '../types'\nimport { useDocumentLocations } from '../useDocumentLocations'\n\nconst LENGTH_FORMAT: Record<number, string> = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n}\n\nconst TONE_ICONS: Record<'positive' | 'caution' | 'critical', ComponentType> = {\n  positive: InfoOutlineIcon,\n  caution: WarningOutlineIcon,\n  critical: ErrorOutlineIcon,\n}\n\nexport function LocationsBanner(props: {\n  documentId: string\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n  showPresentationTitle: boolean\n}): ReactNode {\n  const { documentId, options, schemaType, showPresentationTitle } = props\n  const presentation = useContext(PresentationContext)\n\n  const { message, locations, tone } = useDocumentLocations({\n    id: documentId,\n    locate: options.locate,\n    type: schemaType.name,\n  })\n\n  const len = locations?.length || 0\n\n  const [expanded, setExpanded] = useState(false)\n\n  const toggle = useCallback(() => setExpanded((v) => !v), [])\n\n  const title =\n    message ||\n    (len ? (\n      <>\n        Used on {LENGTH_FORMAT[len] || len} {len === 1 ? <>page</> : <>pages</>}\n      </>\n    ) : null)\n\n  if (len === 0 && !title) {\n    return null\n  }\n\n  return (\n    <Card padding={1} radius={3} border tone={tone}>\n      <div style={{ margin: -1 }}>\n        {!locations && (\n          <Flex align=\"flex-start\" gap={3} padding={3}>\n            {tone && (\n              <Box flex=\"none\">\n                <Text size={1}>{createElement(TONE_ICONS[tone])}</Text>\n              </Box>\n            )}\n            <Box flex={1}>\n              <Text size={1} weight=\"medium\">\n                {showPresentationTitle && (\n                  <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>\n                )}\n                {title}\n              </Text>\n            </Box>\n          </Flex>\n        )}\n\n        {locations && (\n          <>\n            <Card\n              as=\"button\"\n              onClick={toggle}\n              padding={3}\n              radius={2}\n              tone=\"inherit\"\n            >\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <ChevronRightIcon\n                      style={{\n                        transform: `rotate(${expanded ? '90deg' : 0})`,\n                        transition: 'transform 100ms ease-in-out',\n                      }}\n                    />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1} weight=\"medium\">\n                    {showPresentationTitle && (\n                      <>{options.title || DEFAULT_TOOL_TITLE} &middot; </>\n                    )}\n                    {title}\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n            <Stack hidden={!expanded} marginTop={1} space={1}>\n              {locations.map((l, index) => (\n                <LocationItem\n                  active={\n                    (options.name || DEFAULT_TOOL_NAME) ===\n                      presentation?.name &&\n                    l.href === presentation?.params.preview\n                  }\n                  documentId={documentId}\n                  documentType={schemaType.name}\n                  key={index}\n                  node={l}\n                  toolName={options.name || DEFAULT_TOOL_NAME}\n                />\n              ))}\n            </Stack>\n          </>\n        )}\n      </div>\n    </Card>\n  )\n}\n\nfunction LocationItem(props: {\n  active: boolean\n  documentId: string\n  documentType: string\n  node: DocumentLocation\n  toolName: string\n}) {\n  const { documentId, documentType, node, active, toolName } = props\n  const presentation = useContext(PresentationContext)\n  const navigate = presentation?.navigate\n\n  const presentationLinkProps = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: documentId,\n      type: documentType,\n      mode: 'presentation',\n      presentation: toolName,\n      ...presentation?.deskParams,\n      preview: node.href,\n    },\n  })\n\n  const handleClick = useCallback(() => {\n    navigate?.({}, { preview: node.href })\n  }, [node.href, navigate])\n\n  return (\n    <Card\n      {...(presentation ? {} : presentationLinkProps)}\n      as={presentation ? 'button' : 'a'}\n      key={node.href}\n      onClick={handleClick}\n      padding={3}\n      radius={2}\n      pressed={active}\n      tone=\"inherit\"\n    >\n      <Flex gap={3}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <DesktopIcon />\n          </Text>\n        </Box>\n        <Stack flex={1} space={2}>\n          <Text size={1} weight=\"medium\">\n            {node.title}\n          </Text>\n          <Text muted size={1} textOverflow=\"ellipsis\">\n            {node.href}\n          </Text>\n        </Stack>\n      </Flex>\n    </Card>\n  )\n}\n","import { createContext } from 'react'\n\nimport { PresentationDocumentContextValue } from './types'\n\nexport const PresentationDocumentContext =\n  createContext<PresentationDocumentContextValue | null>(null)\n","import { Stack } from '@sanity/ui'\nimport { ReactNode, useContext } from 'react'\nimport { ObjectSchemaType, PublishedId } from 'sanity'\n\nimport { PresentationPluginOptions } from '../types'\nimport { LocationsBanner } from './LocationsBanner'\nimport { PresentationDocumentContext } from './PresentationDocumentContext'\n\nexport function PresentationDocumentHeader(props: {\n  documentId: PublishedId\n  options: PresentationPluginOptions\n  schemaType: ObjectSchemaType\n}): ReactNode {\n  const { documentId, options, schemaType } = props\n\n  const context = useContext(PresentationDocumentContext)\n\n  if (context && context.options[0] !== options) {\n    return null\n  }\n\n  const len = context?.options?.length || 0\n\n  return (\n    <Stack marginBottom={5} space={5}>\n      <Stack space={2}>\n        {context?.options.map((o, idx) => (\n          <LocationsBanner\n            documentId={documentId}\n            key={idx}\n            options={o}\n            schemaType={schemaType}\n            showPresentationTitle={len > 1}\n          />\n        ))}\n      </Stack>\n    </Stack>\n  )\n}\n","import {\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport { PresentationPluginOptions } from '../types'\nimport { PresentationDocumentContext } from './PresentationDocumentContext'\nimport { PresentationDocumentContextValue } from './types'\n\n/** @internal */\nexport function PresentationDocumentProvider(props: {\n  children?: ReactNode\n  options: PresentationPluginOptions\n}): ReactElement {\n  const { children, options } = props\n  const parent = useContext(PresentationDocumentContext)\n  const parentRegister = parent?.register\n\n  const [optionsArray, setOptionsArray] = useState<PresentationPluginOptions[]>(\n    () => [],\n  )\n\n  const register = useCallback(\n    (options: PresentationPluginOptions) => {\n      if (parentRegister) {\n        return parentRegister(options)\n      }\n\n      setOptionsArray((prev) => [options].concat(prev))\n\n      return () => {\n        setOptionsArray((prev) => prev.filter((o) => o !== options))\n      }\n    },\n    [parentRegister],\n  )\n\n  const registerRef = useRef(register)\n  registerRef.current = register\n\n  const context: PresentationDocumentContextValue = useMemo(\n    () => ({\n      options: parent?.options || optionsArray,\n      register,\n    }),\n    [optionsArray, parent, register],\n  )\n\n  useEffect(() => registerRef.current(options), [options])\n\n  return (\n    <PresentationDocumentContext.Provider value={context}>\n      {children}\n    </PresentationDocumentContext.Provider>\n  )\n}\n","import { MasterDetailIcon } from '@sanity/icons'\nimport { useContext, useMemo } from 'react'\nimport {\n  defineDocumentFieldAction,\n  DocumentFieldActionItem,\n  isRecord,\n  pathToString,\n  Tool,\n  useWorkspace,\n} from 'sanity'\nimport { useRouter } from 'sanity/router'\n\nimport { PresentationContext } from '../PresentationContext'\n\nexport const openInStructure = defineDocumentFieldAction({\n  name: 'presentation/openInStructure',\n  useAction({ documentId, documentType, path }) {\n    const workspace = useWorkspace()\n    const { navigateIntent } = useRouter()\n    const presentation = useContext(PresentationContext)\n\n    const defaultStructureTool = useMemo(\n      () => findStructureTool(workspace.tools, documentId, documentType),\n      [documentId, documentType, workspace.tools],\n    )\n\n    return {\n      type: 'action',\n      hidden: !presentation || path.length > 0 || !defaultStructureTool,\n      icon: defaultStructureTool?.icon || MasterDetailIcon,\n      title: `Open in ${defaultStructureTool?.title || 'Structure'}`,\n      onAction() {\n        navigateIntent('edit', {\n          id: documentId,\n          type: documentType,\n          mode: 'structure',\n          path: pathToString(path),\n        })\n      },\n      renderAsButton: true,\n    } satisfies DocumentFieldActionItem\n  },\n})\n\nfunction findStructureTool(\n  tools: Tool[],\n  documentId: string,\n  documentType: string,\n): Tool | undefined {\n  const results = tools.map((t) => {\n    const match = t.canHandleIntent?.(\n      'edit',\n      {\n        id: documentId,\n        type: documentType,\n        mode: 'structure',\n      },\n      {},\n    )\n\n    return { tool: t, match }\n  })\n\n  const modeMatches = results.filter((t) => isRecord(t.match) && t.match.mode)\n\n  if (modeMatches.length > 0) {\n    return modeMatches[0].tool\n  }\n\n  const matches = results.filter((t) => t.match)\n\n  return matches[0]?.tool\n}\n","import { uuid } from '@sanity/uuid'\nimport { getPublishedId } from 'sanity'\nimport { SearchParam } from 'sanity/router'\n\nimport { PresentationStateParams } from './types'\n\n/**\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  _routerState: undefined,\n  payload: unknown,\n):\n  | (PresentationStateParams & { _searchParams: SearchParam[] })\n  | { intent: string; params: Record<string, string>; payload: unknown } {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { id, mode, path, presentation, type, ...searchParams } = params\n  if (intent === 'edit' && id) {\n    return {\n      type: type || '*',\n      id: getPublishedId(id),\n      path,\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n  if (intent === 'create') {\n    searchParams.preview = searchParams.preview || '/'\n    return {\n      type: type || '*',\n      id: id || uuid(),\n      _searchParams: Object.entries(searchParams),\n    }\n  }\n  return { intent, params, payload }\n}\n","import { route } from 'sanity/router'\n\nexport const router = route.create(\n  '/',\n  { __unsafe_disableScopedSearchParams: true },\n  [\n    route.intents('/intent'),\n    route.create('/:type', [route.create('/:id'), route.create('/:id/:path')]),\n  ],\n)\n","import type { SanityDocument } from '@sanity/client'\nimport { lazy, Suspense } from 'react'\nimport {\n  definePlugin,\n  getPublishedId,\n  InputProps,\n  isDocumentSchemaType,\n} from 'sanity'\n\nimport {\n  DEFAULT_TOOL_ICON,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n} from './constants'\nimport { PresentationDocumentHeader } from './document/PresentationDocumentHeader'\nimport { PresentationDocumentProvider } from './document/PresentationDocumentProvider'\nimport { openInStructure } from './fieldActions/openInStructure'\nimport { getIntentState } from './getIntentState'\nimport { router } from './router'\nimport { PresentationPluginOptions } from './types'\n\nconst PresentationTool = lazy(() => import('./PresentationTool'))\nconst BroadcastDisplayedDocument = lazy(\n  () => import('./loader/BroadcastDisplayedDocument'),\n)\n\nexport const presentationTool = definePlugin<PresentationPluginOptions>(\n  (options) => {\n    const toolName = options.name || DEFAULT_TOOL_NAME\n\n    function PresentationDocumentInput(props: InputProps) {\n      const value = props.value as SanityDocument\n      const documentId = value?._id ? getPublishedId(value?._id) : undefined\n\n      if (isDocumentSchemaType(props.schemaType)) {\n        return (\n          <PresentationDocumentProvider options={options}>\n            {documentId && (\n              <PresentationDocumentHeader\n                documentId={documentId}\n                options={options}\n                schemaType={props.schemaType}\n              />\n            )}\n            {props.renderDefault(props)}\n            <Suspense key=\"broadcast-displayed-document\">\n              <BroadcastDisplayedDocument value={value} />\n            </Suspense>\n          </PresentationDocumentProvider>\n        )\n      }\n\n      return props.renderDefault(props)\n    }\n\n    function canHandleCreateIntent(params: Record<string, unknown>) {\n      // We can't handle create intents without a `type` parameter\n      if (!('type' in params)) {\n        return false\n      }\n\n      if ('presentation' in params && params.presentation !== toolName) {\n        return false\n      }\n\n      return 'template' in params ? { template: true } : true\n    }\n\n    function canHandleEditIntent(params: Record<string, unknown>) {\n      // We can't handle edit intents without `type` or `id` parameters\n      if (!('type' in params) || !('id' in params)) {\n        return false\n      }\n\n      if ('presentation' in params && params.presentation !== toolName) {\n        return false\n      }\n\n      return 'mode' in params\n        ? { mode: params.mode === EDIT_INTENT_MODE }\n        : true\n    }\n\n    return {\n      document: {\n        unstable_fieldActions: (prev) => {\n          return [\n            ...prev.filter((a) => a.name !== openInStructure.name), // prevent duplication\n            openInStructure,\n          ]\n        },\n      },\n\n      form: {\n        components: {\n          input: PresentationDocumentInput,\n        },\n      },\n\n      tools: [\n        {\n          icon: options.icon || DEFAULT_TOOL_ICON,\n          name: toolName,\n          title: options.title,\n          component: PresentationTool,\n          options,\n          canHandleIntent(intent, params) {\n            if (intent === 'create') return canHandleCreateIntent(params)\n            if (intent === 'edit') return canHandleEditIntent(params)\n            return false\n          },\n          getIntentState,\n          router,\n        },\n      ],\n    }\n  },\n)\n","import { createContext } from 'react'\n\nexport type PresentationNavigateContextValue = (\n  preview: string | undefined,\n  document?: { type: string; id: string },\n) => void\n\nexport const PresentationNavigateContext =\n  createContext<PresentationNavigateContextValue | null>(null)\n","import { createContext } from 'react'\n\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsContext =\n  createContext<PresentationParams | null>(null)\n","import { useContext } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport function usePresentationParams(): PresentationParams {\n  const params = useContext(PresentationParamsContext)\n\n  if (!params) {\n    throw new Error('Presentation params context is missing')\n  }\n\n  return params\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\n\nexport function usePresentationNavigate(): PresentationNavigateContextValue {\n  const navigate = useContext(PresentationNavigateContext)\n\n  if (!navigate) {\n    throw new Error('Presentation navigate context is missing')\n  }\n\n  return navigate\n}\n\nexport type { PresentationNavigateContextValue }\n"],"names":["DEFAULT_TOOL_ICON","ComposeIcon","DEFAULT_TOOL_NAME","DEFAULT_TOOL_TITLE","PresentationContext","createContext","INITIAL_STATE","locations","LENGTH_FORMAT","TONE_ICONS","positive","InfoOutlineIcon","caution","WarningOutlineIcon","critical","ErrorOutlineIcon","LocationsBanner","props","documentId","options","schemaType","showPresentationTitle","presentation","useContext","message","tone","id","locate","type","documentStore","useDocumentStore","state","setLocations","useState","useEffect","result","sub","isObservable","of","subscribe","d","unsubscribe","useDocumentLocations","name","len","length","expanded","setExpanded","toggle","useCallback","v","title","jsxs","Fragment","children","jsx","Card","padding","radius","border","style","margin","Flex","align","gap","Box","flex","Text","size","createElement","weight","as","onClick","ChevronRightIcon","transform","concat","transition","Stack","hidden","marginTop","space","map","l","index","LocationItem","active","href","params","preview","documentType","node","toolName","navigate","presentationLinkProps","useIntentLink","intent","mode","deskParams","handleClick","key","pressed","DesktopIcon","muted","textOverflow","PresentationDocumentContext","PresentationDocumentHeader","_a","context","marginBottom","o","idx","PresentationDocumentProvider","parent","parentRegister","register","optionsArray","setOptionsArray","prev","filter","registerRef","useRef","current","useMemo","Provider","value","openInStructure","defineDocumentFieldAction","useAction","path","workspace","useWorkspace","navigateIntent","useRouter","defaultStructureTool","tools","results","t","tool","match","canHandleIntent","call","modeMatches","isRecord","matches","findStructureTool","icon","MasterDetailIcon","onAction","pathToString","renderAsButton","getIntentState","_routerState","payload","searchParams","getPublishedId","_searchParams","Object","entries","uuid","router","route","create","__unsafe_disableScopedSearchParams","intents","PresentationTool","lazy","Promise","resolve","then","require","BroadcastDisplayedDocument","presentationTool","definePlugin","document","unstable_fieldActions","a","form","components","input","_id","isDocumentSchemaType","renderDefault","Suspense","component","template","canHandleCreateIntent","canHandleEditIntent","PresentationNavigateContext","PresentationParamsContext","exports","A","D","L","M","P","b","c","e","Error","p","u"],"mappings":"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"}