{"ast":null,"code":"const isReactNative = typeof navigator === \"undefined\" ? false : navigator.product === \"ReactNative\";\nconst defaultOptions = {\n  timeout: isReactNative ? 6e4 : 12e4\n};\nconst processOptions = function processOptions2(opts) {\n  const options = {\n    ...defaultOptions,\n    ...(typeof opts === \"string\" ? {\n      url: opts\n    } : opts)\n  };\n  const {\n    searchParams\n  } = new URL(options.url, \"http://localhost\");\n  options.timeout = normalizeTimeout(options.timeout);\n  if (options.query) {\n    for (const [key, value] of Object.entries(options.query)) {\n      if (value !== void 0) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v);\n          }\n        } else {\n          searchParams.append(key, value);\n        }\n      }\n    }\n  }\n  const [url] = options.url.split(\"?\");\n  const search = searchParams.toString();\n  if (search) {\n    options.url = \"\".concat(url, \"?\").concat(search);\n  }\n  options.method = options.body && !options.method ? \"POST\" : (options.method || \"GET\").toUpperCase();\n  return options;\n};\nfunction normalizeTimeout(time) {\n  if (time === false || time === 0) {\n    return false;\n  }\n  if (time.connect || time.socket) {\n    return time;\n  }\n  const delay = Number(time);\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout);\n  }\n  return {\n    connect: delay,\n    socket: delay\n  };\n}\nconst validUrl = /^https?:\\/\\//i;\nconst validateOptions = function validateOptions2(options) {\n  if (!validUrl.test(options.url)) {\n    throw new Error('\"'.concat(options.url, '\" is not a valid URL'));\n  }\n};\nexport { processOptions, validateOptions };","map":{"version":3,"names":["isReactNative","navigator","product","defaultOptions","timeout","processOptions","processOptions2","opts","options","url","searchParams","URL","normalizeTimeout","query","key","value","Object","entries","Array","isArray","v","append","split","search","toString","concat","method","body","toUpperCase","time","connect","socket","delay","Number","isNaN","validUrl","validateOptions","validateOptions2","test","Error"],"sources":["D:\\A Projects\\shareme-new\\shareme_frontend\\node_modules\\get-it\\src\\middleware\\defaultOptionsProcessor.ts","D:\\A Projects\\shareme-new\\shareme_frontend\\node_modules\\get-it\\src\\middleware\\defaultOptionsValidator.ts"],"sourcesContent":["import type {MiddlewareHooks, RequestOptions} from '../types'\n\nconst isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000} satisfies Partial<RequestOptions>\n\n/** @public */\nexport const processOptions = function processOptions(opts) {\n  const options = {\n    ...defaultOptions,\n    ...(typeof opts === 'string' ? {url: opts} : opts),\n  } satisfies RequestOptions\n\n  // Allow parsing relative URLs by setting the origin to `http://localhost`\n  const {searchParams} = new URL(options.url, 'http://localhost')\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    for (const [key, value] of Object.entries(options.query)) {\n      if (value !== undefined) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v as string)\n          }\n        } else {\n          searchParams.append(key, value as string)\n        }\n      }\n    }\n  }\n  // Merge back params into url\n  const [url] = options.url.split('?')\n  const search = searchParams.toString()\n  if (search) {\n    options.url = `${url}?${search}`\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  return options\n} satisfies MiddlewareHooks['processOptions']\n\nfunction normalizeTimeout(time: RequestOptions['timeout']) {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n","import type {MiddlewareHooks} from '../types'\n\nconst validUrl = /^https?:\\/\\//i\n\n/** @public */\nexport const validateOptions = function validateOptions(options) {\n  if (!validUrl.test(options.url)) {\n    throw new Error(`\"${options.url}\" is not a valid URL`)\n  }\n} satisfies MiddlewareHooks['validateOptions']\n"],"mappings":"AAEA,MAAMA,aAAA,GAAgB,OAAOC,SAAA,KAAc,WAAc,WAAQA,SAAA,CAAUC,OAAY;AAEvF,MAAMC,cAAiB;EAACC,OAAS,EAAAJ,aAAA,GAAgB,MAAQ;AAAM;AAGlD,MAAAK,cAAA,GAAiB,SAASC,gBAAeC,IAAM;EAC1D,MAAMC,OAAU;IACd,GAAGL,cAAA;IACH,IAAI,OAAOI,IAAA,KAAS,WAAW;MAACE,GAAA,EAAKF;IAAA,CAAQ,GAAAA,IAAA;EAAA,CAC/C;EAGA,MAAM;IAACG;EAAY,IAAI,IAAIC,GAAI,CAAAH,OAAA,CAAQC,GAAA,EAAK,kBAAkB;EAGtDD,OAAA,CAAAJ,OAAA,GAAUQ,gBAAiB,CAAAJ,OAAA,CAAQJ,OAAO;EAGlD,IAAII,OAAA,CAAQK,KAAO;IACN,YAACC,GAAA,EAAKC,KAAK,KAAKC,MAAA,CAAOC,OAAQ,CAAAT,OAAA,CAAQK,KAAK,CAAG;MACxD,IAAIE,KAAA,KAAU,KAAW;QACnB,IAAAG,KAAA,CAAMC,OAAQ,CAAAJ,KAAK,CAAG;UACxB,WAAWK,CAAA,IAAKL,KAAO;YACRL,YAAA,CAAAW,MAAA,CAAOP,GAAA,EAAKM,CAAW;UAAA;QACtC,CACK;UACQV,YAAA,CAAAW,MAAA,CAAOP,GAAA,EAAKC,KAAe;QAAA;MAC1C;IACF;EACF;EAGF,MAAM,CAACN,GAAG,IAAID,OAAQ,CAAAC,GAAA,CAAIa,KAAA,CAAM,GAAG;EAC7B,MAAAC,MAAA,GAASb,YAAA,CAAac,QAAS;EACrC,IAAID,MAAQ;IACFf,OAAA,CAAAC,GAAA,GAAM,EAAG,CAAAgB,MAAA,CAAAhB,GAAA,EAAG,GAAI,EAAAgB,MAAA,CAAAF,MAAA;EAAA;EAIlBf,OAAA,CAAAkB,MAAA,GACNlB,OAAQ,CAAAmB,IAAA,IAAQ,CAACnB,OAAA,CAAQkB,MAAA,GAAS,MAAU,IAAAlB,OAAA,CAAQkB,MAAU,WAAOE,WAAY;EAE5E,OAAApB,OAAA;AACT;AAEA,SAASI,iBAAiBiB,IAAiC;EACrD,IAAAA,IAAA,KAAS,KAAS,IAAAA,IAAA,KAAS,CAAG;IACzB;EAAA;EAGL,IAAAA,IAAA,CAAKC,OAAW,IAAAD,IAAA,CAAKE,MAAQ;IACxB,OAAAF,IAAA;EAAA;EAGH,MAAAG,KAAA,GAAQC,MAAA,CAAOJ,IAAI;EACrB,IAAAK,KAAA,CAAMF,KAAK,CAAG;IACT,OAAApB,gBAAA,CAAiBT,cAAA,CAAeC,OAAO;EAAA;EAGhD,OAAO;IAAC0B,OAAA,EAASE,KAAO;IAAAD,MAAA,EAAQC;EAAK;AACvC;AC5DA,MAAMG,QAAW;AAGJ,MAAAC,eAAA,GAAkB,SAASC,iBAAgB7B,OAAS;EAC/D,IAAI,CAAC2B,QAAA,CAASG,IAAK,CAAA9B,OAAA,CAAQC,GAAG,CAAG;IAC/B,MAAM,IAAI8B,KAAA,CAAM,GAAI,CAAAd,MAAA,CAAAjB,OAAA,CAAQC,GAAA,EAAG,sBAAsB;EAAA;AAEzD"},"metadata":{},"sourceType":"module","externalDependencies":[]}