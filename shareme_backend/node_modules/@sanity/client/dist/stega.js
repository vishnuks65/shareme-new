import { SanityClient, ObservableSanityClient, defineCreateClientExports, middleware } from './_chunks/nodeMiddleware-OX5-R8Hk.js';
export { BasePatch, BaseTransaction, ClientError, ObservablePatch, ObservableTransaction, Patch, ServerError, Transaction, vercelStegaCleanAll } from './_chunks/nodeMiddleware-OX5-R8Hk.js';
export { adapter as unstable__adapter, environment as unstable__environment } from 'get-it';
export { encodeIntoResult, stegaEncodeSourceMap } from './_chunks/stegaEncodeSourceMap-OKnT3zAM.js';

class SanityStegaClient extends SanityClient {
}
class ObservableSanityStegaClient extends ObservableSanityClient {
}

const exp = defineCreateClientExports(middleware, SanityClient);
const requester = exp.requester;
const createClient = exp.createClient;

export { ObservableSanityClient, ObservableSanityStegaClient, SanityClient, SanityStegaClient, createClient, requester };
//# sourceMappingURL=stega.js.map
